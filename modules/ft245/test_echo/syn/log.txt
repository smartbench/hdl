yosys -p "read_verilog -I../../../../inc/ ../../ft245.v ../../ft245_block.v ../tx_rx.v; synth_ice40 -top tx_rx -blif tx_rx.blif"

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7+259 (git sha1 5c09f24, clang 3.4.2 -fPIC -Os)


-- Running command `read_verilog -I../../../../inc/ ../../ft245.v ../../ft245_block.v ../tx_rx.v; synth_ice40 -top tx_rx -blif tx_rx.blif' --

1. Executing Verilog-2005 frontend.
Parsing Verilog input from `../../ft245.v' to AST representation.
Generating RTLIL representation for module `\ft245_interface'.
CNT_WAIT_RX:: CNT_WAIT_RX=3
CNT_INACTIVE_RX:: CNT_INACTIVE_RX=2
CNT_SETUP_TX:: CNT_SETUP_TX=1
CNT_ACTIVE_TX:: CNT_ACTIVE_TX=3
MAX_CNT:: MAX_CNT=3
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `../../ft245_block.v' to AST representation.
Generating RTLIL representation for module `\ft245_block'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend.
Parsing Verilog input from `../tx_rx.v' to AST representation.
Generating RTLIL representation for module `\tx_rx'.
Successfully finished Verilog frontend.

4. Executing SYNTH_ICE40 pass.

4.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Successfully finished Verilog frontend.

4.2. Executing HIERARCHY pass (managing design hierarchy).

4.2.1. Analyzing design hierarchy..
Top module:  \tx_rx
Used module:     \ft245_interface

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\ft245_interface'.
Parameter \CLOCK_PERIOD_NS = 10
Generating RTLIL representation for module `$paramod\ft245_interface\CLOCK_PERIOD_NS=10'.
CNT_WAIT_RX:: CNT_WAIT_RX=3
CNT_INACTIVE_RX:: CNT_INACTIVE_RX=2
CNT_SETUP_TX:: CNT_SETUP_TX=1
CNT_ACTIVE_TX:: CNT_ACTIVE_TX=3
MAX_CNT:: MAX_CNT=3

4.2.3. Analyzing design hierarchy..
Top module:  \tx_rx
Used module:     $paramod\ft245_interface\CLOCK_PERIOD_NS=10

4.2.4. Analyzing design hierarchy..
Top module:  \tx_rx
Used module:     $paramod\ft245_interface\CLOCK_PERIOD_NS=10
Removing unused module `\ft245_block'.
Removing unused module `\ft245_interface'.
Removed 2 unused modules.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:59$64'.
Cleaned up 0 empty switches.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.3.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\tx_rx.$proc$../tx_rx.v:45$44'.
  Set init value: \rst_cnt = 16'0000000000000000
Found init rule in `\tx_rx.$proc$../tx_rx.v:44$43'.
  Set init value: \start = 1'0
Found init rule in `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:19$63'.
  Set init value: \tx_oe_245 = 1'0
Found init rule in `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:18$62'.
  Set init value: \wr_245 = 1'0
Found init rule in `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:13$61'.
  Set init value: \rx_245 = 1'0

4.3.4. Executing PROC_ARST pass (detect async resets in processes).

4.3.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\tx_rx.$proc$../tx_rx.v:45$44'.
     1/1: $1\rst_cnt[15:0]
Creating decoders for process `\tx_rx.$proc$../tx_rx.v:44$43'.
     1/1: $1\start[0:0]
Creating decoders for process `\tx_rx.$proc$../tx_rx.v:56$42'.
     1/1: $0\leds[7:0]
Creating decoders for process `\tx_rx.$proc$../tx_rx.v:51$39'.
     1/2: $0\rst_cnt[15:0]
     2/2: $0\start[0:0]
Creating decoders for process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:19$63'.
     1/1: $1\tx_oe_245[0:0]
Creating decoders for process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:18$62'.
     1/1: $1\wr_245[0:0]
Creating decoders for process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:13$61'.
     1/1: $1\rx_245[0:0]
Creating decoders for process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:77$45'.
     1/9: $0\cnt[2:0]
     2/9: $0\state[2:0]
     3/9: $0\tx_ack_si[0:0]
     4/9: $0\rx_rdy_si[0:0]
     5/9: $0\rx_data_si[7:0]
     6/9: $0\tx_oe_245[0:0]
     7/9: $0\wr_245[0:0]
     8/9: $0\tx_data_245[7:0]
     9/9: $0\rx_245[0:0]

4.3.6. Executing PROC_DLATCH pass (convert process syncs to latches).

4.3.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\tx_rx.\leds' using process `\tx_rx.$proc$../tx_rx.v:56$42'.
  created $dff cell `$procdff$219' with positive edge clock.
Creating register for signal `\tx_rx.\start' using process `\tx_rx.$proc$../tx_rx.v:51$39'.
  created $dff cell `$procdff$220' with positive edge clock.
Creating register for signal `\tx_rx.\rst_cnt' using process `\tx_rx.$proc$../tx_rx.v:51$39'.
  created $dff cell `$procdff$221' with positive edge clock.
Creating register for signal `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.\rx_245' using process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:77$45'.
  created $dff cell `$procdff$222' with positive edge clock.
Creating register for signal `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.\tx_data_245' using process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:77$45'.
  created $dff cell `$procdff$223' with positive edge clock.
Creating register for signal `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.\wr_245' using process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:77$45'.
  created $dff cell `$procdff$224' with positive edge clock.
Creating register for signal `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.\tx_oe_245' using process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:77$45'.
  created $dff cell `$procdff$225' with positive edge clock.
Creating register for signal `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.\rx_data_si' using process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:77$45'.
  created $dff cell `$procdff$226' with positive edge clock.
Creating register for signal `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.\rx_rdy_si' using process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:77$45'.
  created $dff cell `$procdff$227' with positive edge clock.
Creating register for signal `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.\tx_ack_si' using process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:77$45'.
  created $dff cell `$procdff$228' with positive edge clock.
Creating register for signal `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.\state' using process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:77$45'.
  created $dff cell `$procdff$229' with positive edge clock.
Creating register for signal `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.\cnt' using process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:77$45'.
  created $dff cell `$procdff$230' with positive edge clock.

4.3.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `tx_rx.$proc$../tx_rx.v:45$44'.
Removing empty process `tx_rx.$proc$../tx_rx.v:44$43'.
Found and cleaned up 3 empty switches in `\tx_rx.$proc$../tx_rx.v:56$42'.
Removing empty process `tx_rx.$proc$../tx_rx.v:56$42'.
Found and cleaned up 1 empty switch in `\tx_rx.$proc$../tx_rx.v:51$39'.
Removing empty process `tx_rx.$proc$../tx_rx.v:51$39'.
Removing empty process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:19$63'.
Removing empty process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:18$62'.
Removing empty process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:13$61'.
Found and cleaned up 7 empty switches in `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:77$45'.
Removing empty process `$paramod\ft245_interface\CLOCK_PERIOD_NS=10.$proc$../../ft245.v:77$45'.
Cleaned up 11 empty switches.

4.4. Executing FLATTEN pass (flatten design).
Mapping tx_rx.ft245_u using $paramod\ft245_interface\CLOCK_PERIOD_NS=10.
No more expansions possible.
Deleting now unused module $paramod\ft245_interface\CLOCK_PERIOD_NS=10.

4.5. Executing TRIBUF pass.

4.6. Executing DEMINOUT pass (demote inout ports to input or output).

4.7. Executing SYNTH pass.

4.7.1. Executing PROC pass (convert processes to netlists).

4.7.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.7.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.7.1.3. Executing PROC_INIT pass (extract init attributes).

4.7.1.4. Executing PROC_ARST pass (detect async resets in processes).

4.7.1.5. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.7.1.6. Executing PROC_DLATCH pass (convert process syncs to latches).

4.7.1.7. Executing PROC_DFF pass (convert process syncs to FFs).

4.7.1.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.7.2. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$techmap\ft245_u.$procmux$215_CMP0' in module `tx_rx' with $logic_not.
Replacing $eq cell `$techmap\ft245_u.$eq$../../ft245.v:95$50' in module `tx_rx' with inverter.
Replacing $eq cell `$techmap\ft245_u.$eq$../../ft245.v:95$49' in module `tx_rx' with inverter.
Replacing $eq cell `$techmap\ft245_u.$eq$../../ft245.v:78$46' (1) in module `\tx_rx' with constant driver `$techmap\ft245_u.$eq$../../ft245.v:78$46_Y = \ft245_u.rst'.
Replacing $eq cell `$techmap\ft245_u.$procmux$199_CMP0' in module `tx_rx' with $logic_not.
Replacing $eq cell `$techmap\ft245_u.$eq$../../ft245.v:99$53' (1) in module `\tx_rx' with constant driver `$techmap\ft245_u.$eq$../../ft245.v:99$53_Y = \ft245_u.tx_rdy_si'.
Replacing $eq cell `$techmap\ft245_u.$eq$../../ft245.v:99$52' in module `tx_rx' with inverter.
Replacing $eq cell `$techmap\ft245_u.$procmux$173_CMP0' in module `tx_rx' with $logic_not.
Replacing $eq cell `$techmap\ft245_u.$procmux$133_CMP0' in module `tx_rx' with $logic_not.
Replacing $eq cell `$techmap\ft245_u.$procmux$117_CMP0' in module `tx_rx' with $logic_not.
Replacing $eq cell `$techmap\ft245_u.$procmux$92_CMP0' in module `tx_rx' with $logic_not.

4.7.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
  removed 52 unused temporary wires.
Removed 0 unused cells and 52 unused wires.

4.7.4. Executing CHECK pass (checking for obvious problems).
checking module tx_rx..
Warning: Wire tx_rx.\clk_o is used but has no driver.
found and reported 1 problems.

4.7.5. Executing OPT pass (performing simple optimizations).

4.7.5.1. Executing OPT_EXPR pass (perform const folding).

4.7.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
  Cell `$techmap\ft245_u.$add$../../ft245.v:121$57' is identical to cell `$techmap\ft245_u.$add$../../ft245.v:109$55'.
    Redirecting output \Y: $techmap\ft245_u.$add$../../ft245.v:121$57_Y = $techmap\ft245_u.$add$../../ft245.v:109$55_Y
    Removing $add cell `$techmap\ft245_u.$add$../../ft245.v:121$57' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$add$../../ft245.v:136$59' is identical to cell `$techmap\ft245_u.$add$../../ft245.v:109$55'.
    Redirecting output \Y: $techmap\ft245_u.$add$../../ft245.v:136$59_Y = $techmap\ft245_u.$add$../../ft245.v:109$55_Y
    Removing $add cell `$techmap\ft245_u.$add$../../ft245.v:136$59' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$eq$../../ft245.v:138$60' is identical to cell `$techmap\ft245_u.$eq$../../ft245.v:110$56'.
    Redirecting output \Y: $techmap\ft245_u.$eq$../../ft245.v:138$60_Y = $techmap\ft245_u.$eq$../../ft245.v:110$56_Y
    Removing $eq cell `$techmap\ft245_u.$eq$../../ft245.v:138$60' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$133_CMP0' is identical to cell `$techmap\ft245_u.$procmux$117_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$133_CMP = $techmap\ft245_u.$procmux$117_CMP
    Removing $logic_not cell `$techmap\ft245_u.$procmux$133_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$145_CMP0' is identical to cell `$techmap\ft245_u.$procmux$110_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$145_CMP = $techmap\ft245_u.$procmux$110_CMP
    Removing $eq cell `$techmap\ft245_u.$procmux$145_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$157_CMP0' is identical to cell `$techmap\ft245_u.$procmux$110_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$157_CMP = $techmap\ft245_u.$procmux$110_CMP
    Removing $eq cell `$techmap\ft245_u.$procmux$157_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$166_CMP0' is identical to cell `$techmap\ft245_u.$procmux$101_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$166_CMP = $techmap\ft245_u.$procmux$101_CMP
    Removing $eq cell `$techmap\ft245_u.$procmux$166_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$173_CMP0' is identical to cell `$techmap\ft245_u.$procmux$117_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$173_CMP = $techmap\ft245_u.$procmux$117_CMP
    Removing $logic_not cell `$techmap\ft245_u.$procmux$173_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$182_CMP0' is identical to cell `$techmap\ft245_u.$procmux$101_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$182_CMP = $techmap\ft245_u.$procmux$101_CMP
    Removing $eq cell `$techmap\ft245_u.$procmux$182_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$183_CMP0' is identical to cell `$techmap\ft245_u.$procmux$102_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$183_CMP = $techmap\ft245_u.$procmux$102_CMP
    Removing $eq cell `$techmap\ft245_u.$procmux$183_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$199_CMP0' is identical to cell `$techmap\ft245_u.$procmux$117_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$199_CMP = $techmap\ft245_u.$procmux$117_CMP
    Removing $logic_not cell `$techmap\ft245_u.$procmux$199_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$205_CMP0' is identical to cell `$techmap\ft245_u.$procmux$101_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$205_CMP = $techmap\ft245_u.$procmux$101_CMP
    Removing $eq cell `$techmap\ft245_u.$procmux$205_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$206_CMP0' is identical to cell `$techmap\ft245_u.$procmux$102_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$206_CMP = $techmap\ft245_u.$procmux$102_CMP
    Removing $eq cell `$techmap\ft245_u.$procmux$206_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$207_CMP0' is identical to cell `$techmap\ft245_u.$procmux$106_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$207_CMP = $techmap\ft245_u.$procmux$106_CMP
    Removing $eq cell `$techmap\ft245_u.$procmux$207_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$211_CMP0' is identical to cell `$techmap\ft245_u.$procmux$110_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$211_CMP = $techmap\ft245_u.$procmux$110_CMP
    Removing $eq cell `$techmap\ft245_u.$procmux$211_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$215_CMP0' is identical to cell `$techmap\ft245_u.$procmux$117_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$215_CMP = $techmap\ft245_u.$procmux$117_CMP
    Removing $logic_not cell `$techmap\ft245_u.$procmux$215_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$82_CMP0' is identical to cell `$techmap\ft245_u.$procmux$101_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$82_CMP = $techmap\ft245_u.$procmux$101_CMP
    Removing $eq cell `$techmap\ft245_u.$procmux$82_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$83_CMP0' is identical to cell `$techmap\ft245_u.$procmux$102_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$83_CMP = $techmap\ft245_u.$procmux$102_CMP
    Removing $eq cell `$techmap\ft245_u.$procmux$83_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$84_CMP0' is identical to cell `$techmap\ft245_u.$procmux$106_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$84_CMP = $techmap\ft245_u.$procmux$106_CMP
    Removing $eq cell `$techmap\ft245_u.$procmux$84_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$88_CMP0' is identical to cell `$techmap\ft245_u.$procmux$110_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$88_CMP = $techmap\ft245_u.$procmux$110_CMP
    Removing $eq cell `$techmap\ft245_u.$procmux$88_CMP0' from module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$92_CMP0' is identical to cell `$techmap\ft245_u.$procmux$117_CMP0'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$92_CMP = $techmap\ft245_u.$procmux$117_CMP
    Removing $logic_not cell `$techmap\ft245_u.$procmux$92_CMP0' from module `\tx_rx'.
Removed a total of 21 cells.

4.7.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $techmap\ft245_u.$procmux$119 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$135 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$147 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$159 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$175 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$185 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$201 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$217 (pure)
    Root of a mux tree: $procmux$72 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$94 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.7.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tx_rx.
    New ctrl vector for $pmux cell $techmap\ft245_u.$procmux$204: { $techmap\ft245_u.$procmux$117_CMP $techmap\ft245_u.$procmux$110_CMP $auto$opt_reduce.cc:132:opt_mux$232 }
  Optimizing cells in module \tx_rx.
Performed a total of 1 changes.

4.7.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
  Cell `$techmap\ft245_u.$procmux$86' is identical to cell `$techmap\ft245_u.$procmux$79'.
    Redirecting output \Y: $techmap\ft245_u.$procmux$86_Y = $techmap\ft245_u.$procmux$79_Y
    Removing $mux cell `$techmap\ft245_u.$procmux$86' from module `\tx_rx'.
Removed a total of 1 cells.

4.7.5.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.7.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
  removed 22 unused temporary wires.
Removed 0 unused cells and 74 unused wires.

4.7.5.8. Executing OPT_EXPR pass (perform const folding).

4.7.5.9. Rerunning OPT passes. (Maybe there is more to do..)

4.7.5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$72 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$119 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$135 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$147 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$159 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$175 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$185 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$201 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$217 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$94 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.7.5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tx_rx.
    New ctrl vector for $pmux cell $techmap\ft245_u.$procmux$81: { $techmap\ft245_u.$procmux$117_CMP $techmap\ft245_u.$procmux$106_CMP $techmap\ft245_u.$procmux$102_CMP $auto$opt_reduce.cc:132:opt_mux$234 }
  Optimizing cells in module \tx_rx.
Performed a total of 1 changes.

4.7.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
Removed a total of 0 cells.

4.7.5.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.7.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
Removed 0 unused cells and 74 unused wires.

4.7.5.15. Executing OPT_EXPR pass (perform const folding).

4.7.5.16. Rerunning OPT passes. (Maybe there is more to do..)

4.7.5.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$72 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$119 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$135 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$147 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$159 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$175 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$185 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$201 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$217 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$94 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.7.5.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tx_rx.
Performed a total of 0 changes.

4.7.5.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
Removed a total of 0 cells.

4.7.5.20. Executing OPT_RMDFF pass (remove dff with constant values).

4.7.5.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
Removed 0 unused cells and 74 unused wires.

4.7.5.22. Executing OPT_EXPR pass (perform const folding).

4.7.5.23. Finished OPT passes. (There is nothing left to do.)

4.7.6. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 8) from mux cell tx_rx.$procmux$67 ($mux).
Removed top 31 bits (of 32) from port B of cell tx_rx.$add$../tx_rx.v:52$40 ($add).
Removed top 16 bits (of 32) from port Y of cell tx_rx.$add$../tx_rx.v:52$40 ($add).
Removed top 6 bits (of 16) from port B of cell tx_rx.$eq$../tx_rx.v:53$41 ($eq).
Removed top 2 bits (of 3) from port B of cell tx_rx.$techmap\ft245_u.$procmux$110_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tx_rx.$techmap\ft245_u.$procmux$106_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell tx_rx.$techmap\ft245_u.$procmux$102_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell tx_rx.$techmap\ft245_u.$eq$../../ft245.v:122$58 ($eq).
Removed top 1 bits (of 3) from port B of cell tx_rx.$techmap\ft245_u.$eq$../../ft245.v:110$56 ($eq).
Removed top 31 bits (of 32) from port B of cell tx_rx.$techmap\ft245_u.$add$../../ft245.v:109$55 ($add).
Removed top 29 bits (of 32) from port Y of cell tx_rx.$techmap\ft245_u.$add$../../ft245.v:109$55 ($add).
Removed top 1 bits (of 8) from wire tx_rx.$procmux$67_Y.
Removed top 29 bits (of 32) from wire tx_rx.$techmap\ft245_u.$add$../../ft245.v:109$55_Y.

4.7.7. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module tx_rx:
  creating $macc model for $add$../tx_rx.v:52$40 ($add).
  creating $macc model for $techmap\ft245_u.$add$../../ft245.v:109$55 ($add).
  creating $alu model for $macc $techmap\ft245_u.$add$../../ft245.v:109$55.
  creating $alu model for $macc $add$../tx_rx.v:52$40.
  creating $alu cell for $add$../tx_rx.v:52$40: $auto$alumacc.cc:470:replace_alu$237
  creating $alu cell for $techmap\ft245_u.$add$../../ft245.v:109$55: $auto$alumacc.cc:470:replace_alu$240
  created 2 $alu and 0 $macc cells.

4.7.8. Executing SHARE pass (SAT-based resource sharing).

4.7.9. Executing OPT pass (performing simple optimizations).

4.7.9.1. Executing OPT_EXPR pass (perform const folding).

4.7.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
Removed a total of 0 cells.

4.7.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$72 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$119 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$135 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$147 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$159 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$175 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$185 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$201 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$217 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$94 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.7.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tx_rx.
Performed a total of 0 changes.

4.7.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
Removed a total of 0 cells.

4.7.9.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.7.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
  removed 3 unused temporary wires.
Removed 0 unused cells and 77 unused wires.

4.7.9.8. Executing OPT_EXPR pass (perform const folding).

4.7.9.9. Finished OPT passes. (There is nothing left to do.)

4.7.10. Executing FSM pass (extract and optimize FSM).

4.7.10.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register tx_rx.ft245_u.state.

4.7.10.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\ft245_u.state' from module `\tx_rx'.
  found $dff cell for state register: $techmap\ft245_u.$procdff$229
  root of input selection tree: $techmap\ft245_u.$0\state[2:0]
  found reset state: 3'000 (guessed from mux tree)
  found ctrl input: \ft245_u.rst
  found ctrl input: $techmap\ft245_u.$procmux$101_CMP
  found ctrl input: $techmap\ft245_u.$procmux$102_CMP
  found ctrl input: $techmap\ft245_u.$procmux$106_CMP
  found ctrl input: $techmap\ft245_u.$procmux$110_CMP
  found ctrl input: $techmap\ft245_u.$procmux$117_CMP
  found ctrl input: $techmap\ft245_u.$eq$../../ft245.v:110$56_Y
  found state code: 3'000
  found state code: 3'100
  found ctrl input: $techmap\ft245_u.$eq$../../ft245.v:122$58_Y
  found state code: 3'010
  found ctrl input: $techmap\ft245_u.$logic_and$../../ft245.v:95$51_Y
  found ctrl input: $techmap\ft245_u.$logic_and$../../ft245.v:99$54_Y
  found state code: 3'011
  found state code: 3'001
  found ctrl output: $techmap\ft245_u.$procmux$117_CMP
  found ctrl output: $techmap\ft245_u.$procmux$110_CMP
  found ctrl output: $techmap\ft245_u.$procmux$106_CMP
  found ctrl output: $techmap\ft245_u.$procmux$102_CMP
  found ctrl output: $techmap\ft245_u.$procmux$101_CMP
  ctrl inputs: { \ft245_u.rst $techmap\ft245_u.$logic_and$../../ft245.v:95$51_Y $techmap\ft245_u.$logic_and$../../ft245.v:99$54_Y $techmap\ft245_u.$eq$../../ft245.v:110$56_Y $techmap\ft245_u.$eq$../../ft245.v:122$58_Y }
  ctrl outputs: { $techmap\ft245_u.$0\state[2:0] $techmap\ft245_u.$procmux$101_CMP $techmap\ft245_u.$procmux$102_CMP $techmap\ft245_u.$procmux$106_CMP $techmap\ft245_u.$procmux$110_CMP $techmap\ft245_u.$procmux$117_CMP }
  transition:      3'000 5'000-- ->      3'000 8'00000001
  transition:      3'000 5'001-- ->      3'011 8'01100001
  transition:      3'000 5'01--- ->      3'001 8'00100001
  transition:      3'000 5'1---- ->      3'000 8'00000001
  transition:      3'100 5'0--0- ->      3'100 8'10010000
  transition:      3'100 5'0--1- ->      3'000 8'00010000
  transition:      3'100 5'1---- ->      3'000 8'00010000
  transition:      3'010 5'0---0 ->      3'010 8'01000100
  transition:      3'010 5'0---1 ->      3'000 8'00000100
  transition:      3'010 5'1---- ->      3'000 8'00000100
  transition:      3'001 5'0--0- ->      3'001 8'00100010
  transition:      3'001 5'0--1- ->      3'010 8'01000010
  transition:      3'001 5'1---- ->      3'000 8'00000010
  transition:      3'011 5'0---- ->      3'100 8'10001000
  transition:      3'011 5'1---- ->      3'000 8'00001000

4.7.10.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\ft245_u.state$243' from module `\tx_rx'.

4.7.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
  removing unused `$dff' cell `$techmap\ft245_u.$procdff$229'.
  removing unused `$mux' cell `$techmap\ft245_u.$procmux$119'.
  removing unused `$logic_not' cell `$techmap\ft245_u.$procmux$117_CMP0'.
  removing unused `$mux' cell `$techmap\ft245_u.$procmux$115'.
  removing unused `$mux' cell `$techmap\ft245_u.$procmux$112'.
  removing unused `$eq' cell `$techmap\ft245_u.$procmux$110_CMP0'.
  removing unused `$mux' cell `$techmap\ft245_u.$procmux$108'.
  removing unused `$eq' cell `$techmap\ft245_u.$procmux$106_CMP0'.
  removing unused `$mux' cell `$techmap\ft245_u.$procmux$104'.
  removing unused `$eq' cell `$techmap\ft245_u.$procmux$102_CMP0'.
  removing unused `$pmux' cell `$techmap\ft245_u.$procmux$100'.
  removing unused `$eq' cell `$techmap\ft245_u.$procmux$101_CMP0'.
  removing unused `$mux' cell `$techmap\ft245_u.$procmux$98'.
  removed 13 unused temporary wires.
Removed 13 unused cells and 90 unused wires.

4.7.10.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\ft245_u.state$243' from module `\tx_rx'.
  Removing unused output signal $techmap\ft245_u.$0\state[2:0] [0].
  Removing unused output signal $techmap\ft245_u.$0\state[2:0] [1].
  Removing unused output signal $techmap\ft245_u.$0\state[2:0] [2].

4.7.10.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\ft245_u.state$243' from module `\tx_rx' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ----1
  100 -> ---1-
  010 -> --1--
  001 -> -1---
  011 -> 1----

4.7.10.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\ft245_u.state$243' from module `\tx_rx':
-------------------------------------

  Information on FSM $fsm$\ft245_u.state$243 (\ft245_u.state):

  Number of input signals:    5
  Number of output signals:   5
  Number of state bits:       5

  Input signals:
    0: $techmap\ft245_u.$eq$../../ft245.v:122$58_Y
    1: $techmap\ft245_u.$eq$../../ft245.v:110$56_Y
    2: $techmap\ft245_u.$logic_and$../../ft245.v:99$54_Y
    3: $techmap\ft245_u.$logic_and$../../ft245.v:95$51_Y
    4: \ft245_u.rst

  Output signals:
    0: $techmap\ft245_u.$procmux$117_CMP
    1: $techmap\ft245_u.$procmux$110_CMP
    2: $techmap\ft245_u.$procmux$106_CMP
    3: $techmap\ft245_u.$procmux$102_CMP
    4: $techmap\ft245_u.$procmux$101_CMP

  State encoding:
    0:    5'----1  <RESET STATE>
    1:    5'---1-
    2:    5'--1--
    3:    5'-1---
    4:    5'1----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 5'000--   ->     0 5'00001
      1:     0 5'1----   ->     0 5'00001
      2:     0 5'01---   ->     3 5'00001
      3:     0 5'001--   ->     4 5'00001
      4:     1 5'0--1-   ->     0 5'10000
      5:     1 5'1----   ->     0 5'10000
      6:     1 5'0--0-   ->     1 5'10000
      7:     2 5'0---1   ->     0 5'00100
      8:     2 5'1----   ->     0 5'00100
      9:     2 5'0---0   ->     2 5'00100
     10:     3 5'1----   ->     0 5'00010
     11:     3 5'0--1-   ->     2 5'00010
     12:     3 5'0--0-   ->     3 5'00010
     13:     4 5'1----   ->     0 5'01000
     14:     4 5'0----   ->     1 5'01000

-------------------------------------

4.7.10.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\ft245_u.state$243' from module `\tx_rx'.

4.7.11. Executing OPT pass (performing simple optimizations).

4.7.11.1. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$288' in module `tx_rx' with $logic_not.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$274' in module `tx_rx' with inverter.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$270' in module `tx_rx' with $logic_not.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$279' in module `tx_rx' with $logic_not.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$267' (1) in module `\tx_rx' with constant driver `$auto$fsm_map.cc:74:implement_pattern_cache$266 = \ft245_u.rst'.
Replacing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$263' in module `tx_rx' with $logic_not.

4.7.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$270' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$288'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$269 = $auto$fsm_map.cc:74:implement_pattern_cache$287
    Removing $logic_not cell `$auto$fsm_map.cc:77:implement_pattern_cache$270' from module `\tx_rx'.
  Cell `$auto$fsm_map.cc:77:implement_pattern_cache$259' is identical to cell `$auto$fsm_map.cc:77:implement_pattern_cache$283'.
    Redirecting output \Y: $auto$fsm_map.cc:74:implement_pattern_cache$258 = $auto$fsm_map.cc:74:implement_pattern_cache$282
    Removing $eq cell `$auto$fsm_map.cc:77:implement_pattern_cache$259' from module `\tx_rx'.
Removed a total of 2 cells.

4.7.11.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.7.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
  removed 11 unused temporary wires.
Removed 13 unused cells and 101 unused wires.

4.7.11.5. Finished fast OPT passes.

4.7.12. Executing MEMORY pass.

4.7.12.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

4.7.12.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
Removed 13 unused cells and 101 unused wires.

4.7.12.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.7.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
Removed 13 unused cells and 101 unused wires.

4.7.12.5. Executing MEMORY_COLLECT pass (generating $mem cells).

4.7.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
Removed 13 unused cells and 101 unused wires.

4.8. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

4.9. Executing TECHMAP pass (map to technology primitives).

4.9.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.
No more expansions possible.

4.10. Executing OPT pass (performing simple optimizations).

4.10.1. Executing OPT_EXPR pass (perform const folding).
Setting undriven signal in tx_rx to undef: \clk_o
Replacing $mux cell `$techmap\ft245_u.$procmux$179' (mux_sel01) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$179_Y = $techmap\ft245_u.$eq$../../ft245.v:110$56_Y'.
Replacing $mux cell `$techmap\ft245_u.$procmux$127' (mux_sel01) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$127_Y = $techmap\ft245_u.$logic_and$../../ft245.v:99$54_Y'.

4.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
Removed a total of 0 cells.

4.10.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
  removed 2 unused temporary wires.
Removed 13 unused cells and 103 unused wires.

4.10.5. Finished fast OPT passes.

4.11. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

4.12. Executing OPT pass (performing simple optimizations).

4.12.1. Executing OPT_EXPR pass (perform const folding).

4.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
Removed a total of 0 cells.

4.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$72 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$135 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$147 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$159 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$175 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$185 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$201 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$217 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$94 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tx_rx.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$233: { \ft245_u.state [1] \ft245_u.state [3] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$231: { \ft245_u.state [1] \ft245_u.state [2] \ft245_u.state [4] }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$286: { $auto$fsm_map.cc:118:implement_pattern_cache$280 $auto$fsm_map.cc:118:implement_pattern_cache$284 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$277: { $auto$fsm_map.cc:118:implement_pattern_cache$271 $auto$fsm_map.cc:118:implement_pattern_cache$275 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$268: { $auto$fsm_map.cc:118:implement_pattern_cache$260 $auto$fsm_map.cc:118:implement_pattern_cache$256 \ft245_u.rst $auto$fsm_map.cc:118:implement_pattern_cache$264 }
    Consolidated identical input bits for $mux cell $procmux$67:
      Old ports: A=7'1111111, B=7'0000001, Y=$auto$wreduce.cc:347:run$235 [6:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:347:run$235 [1]
      New connections: { $auto$wreduce.cc:347:run$235 [6:2] $auto$wreduce.cc:347:run$235 [0] } = { $auto$wreduce.cc:347:run$235 [1] $auto$wreduce.cc:347:run$235 [1] $auto$wreduce.cc:347:run$235 [1] $auto$wreduce.cc:347:run$235 [1] $auto$wreduce.cc:347:run$235 [1] 1'1 }
  Optimizing cells in module \tx_rx.
Performed a total of 6 changes.

4.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
Removed a total of 0 cells.

4.12.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
Removed 13 unused cells and 103 unused wires.

4.12.8. Executing OPT_EXPR pass (perform const folding).

4.12.9. Rerunning OPT passes. (Maybe there is more to do..)

4.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$72 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$135 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$147 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$159 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$175 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$185 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$201 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$217 (pure)
    Root of a mux tree: $techmap\ft245_u.$procmux$94 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tx_rx.
Performed a total of 0 changes.

4.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
Removed a total of 0 cells.

4.12.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
Removed 13 unused cells and 103 unused wires.

4.12.15. Executing OPT_EXPR pass (perform const folding).

4.12.16. Finished OPT passes. (There is nothing left to do.)

4.13. Executing TECHMAP pass (map to technology primitives).

4.13.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.13.2. Executing Verilog-2005 frontend.
Parsing Verilog input from `/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.
Mapping tx_rx.$procmux$75 ($mux) with simplemap.
Mapping tx_rx.$procmux$72 ($mux) with simplemap.
Mapping tx_rx.$procmux$69 ($mux) with simplemap.
Mapping tx_rx.$procmux$67 ($mux) with simplemap.
Mapping tx_rx.$not$../tx_rx.v:49$37 ($not) with simplemap.
Mapping tx_rx.$or$../tx_rx.v:49$38 ($or) with simplemap.
Mapping tx_rx.$eq$../tx_rx.v:53$41 ($eq) with simplemap.
Mapping tx_rx.$procdff$219 ($dff) with simplemap.
Mapping tx_rx.$procdff$220 ($dff) with simplemap.
Mapping tx_rx.$procdff$221 ($dff) with simplemap.

4.13.3. Executing AST frontend in derive mode using pre-parsed AST for module `\_80_ice40_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 3
Parameter \Y_WIDTH = 3
Generating RTLIL representation for module `$paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3'.

4.13.4. Continuing TECHMAP pass.
Mapping tx_rx.$auto$alumacc.cc:470:replace_alu$240 using $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3.

4.13.5. Executing AST frontend in derive mode using pre-parsed AST for module `\_80_ice40_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 16
Parameter \Y_WIDTH = 16
Generating RTLIL representation for module `$paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16'.

4.13.6. Continuing TECHMAP pass.
Mapping tx_rx.$auto$alumacc.cc:470:replace_alu$237 using $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16.
Mapping tx_rx.$auto$fsm_map.cc:121:implement_pattern_cache$257 ($and) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:121:implement_pattern_cache$261 ($and) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:121:implement_pattern_cache$299 ($and) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$255 ($eq) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$297 ($eq) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:144:implement_pattern_cache$295 ($reduce_or) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:121:implement_pattern_cache$294 ($and) with simplemap.
Mapping tx_rx.$auto$opt_reduce.cc:126:opt_mux$233 ($reduce_or) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$292 ($eq) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$274 ($not) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procdff$230 ($dff) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procdff$228 ($dff) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procdff$227 ($dff) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procdff$226 ($dff) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procdff$225 ($dff) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procdff$224 ($dff) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procdff$223 ($dff) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procdff$222 ($dff) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$217 ($mux) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:121:implement_pattern_cache$276 ($and) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$213 ($mux) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:144:implement_pattern_cache$277 ($reduce_or) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$209 ($mux) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$279 ($logic_not) with simplemap.

4.13.7. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 3
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=3'.

4.13.8. Continuing TECHMAP pass.
Mapping tx_rx.$techmap\ft245_u.$procmux$204 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=3.
Mapping tx_rx.$techmap\ft245_u.$procmux$201 ($mux) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$198 ($mux) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:121:implement_pattern_cache$281 ($and) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$196 ($mux) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$193 ($mux) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$185 ($mux) with simplemap.

4.13.9. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=2'.

4.13.10. Continuing TECHMAP pass.
Mapping tx_rx.$techmap\ft245_u.$procmux$181 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$283 ($eq) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$175 ($mux) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$171 ($mux) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$168 ($mux) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$165 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=2.
Mapping tx_rx.$auto$fsm_map.cc:121:implement_pattern_cache$285 ($and) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$163 ($mux) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$159 ($mux) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$156 ($mux) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:144:implement_pattern_cache$286 ($reduce_or) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$154 ($mux) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$147 ($mux) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$144 ($mux) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$142 ($mux) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$135 ($mux) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$132 ($mux) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$288 ($logic_not) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$130 ($mux) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:121:implement_pattern_cache$272 ($and) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:144:implement_pattern_cache$268 ($reduce_or) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:121:implement_pattern_cache$265 ($and) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$263 ($logic_not) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$94 ($mux) with simplemap.
Mapping tx_rx.$auto$opt_reduce.cc:126:opt_mux$231 ($reduce_or) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$procmux$90 ($mux) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:172:map_fsm$251 ($dff) with simplemap.

4.13.11. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 3
Parameter \S_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=3\S_WIDTH=4'.

4.13.12. Continuing TECHMAP pass.
Mapping tx_rx.$techmap\ft245_u.$procmux$81 using $paramod\_90_pmux\WIDTH=3\S_WIDTH=4.
Mapping tx_rx.$techmap\ft245_u.$procmux$79 ($mux) with simplemap.
Mapping tx_rx.$auto$fsm_map.cc:121:implement_pattern_cache$290 ($and) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$eq$../../ft245.v:122$58 ($eq) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$eq$../../ft245.v:110$56 ($eq) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$logic_and$../../ft245.v:99$54 ($logic_and) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$eq$../../ft245.v:99$52 ($not) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$logic_and$../../ft245.v:95$51 ($logic_and) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$eq$../../ft245.v:95$50 ($not) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$eq$../../ft245.v:95$49 ($not) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$and$../../ft245.v:89$48 ($and) with simplemap.
Mapping tx_rx.$techmap\ft245_u.$not$../../ft245.v:89$47 ($not) with simplemap.
Mapping tx_rx.$techmap$auto$alumacc.cc:470:replace_alu$240.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$438 ($xor) with simplemap.
Mapping tx_rx.$auto$alumacc.cc:470:replace_alu$240.A_conv ($pos) with simplemap.
Mapping tx_rx.$auto$alumacc.cc:470:replace_alu$240.B_conv ($pos) with simplemap.
Mapping tx_rx.$techmap$auto$alumacc.cc:470:replace_alu$240.$not$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$436 ($not) with simplemap.
Mapping tx_rx.$techmap$auto$alumacc.cc:470:replace_alu$240.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$437 ($mux) with simplemap.
Mapping tx_rx.$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441 ($xor) with simplemap.
Mapping tx_rx.$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440 ($mux) with simplemap.
Mapping tx_rx.$techmap$auto$alumacc.cc:470:replace_alu$237.$not$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$439 ($not) with simplemap.
Mapping tx_rx.$auto$alumacc.cc:470:replace_alu$237.B_conv ($pos) with simplemap.
Mapping tx_rx.$auto$alumacc.cc:470:replace_alu$237.A_conv ($pos) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$204.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$522 ($reduce_or) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$204.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$521 ($and) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$204.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$520 ($and) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$204.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$519 ($and) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$204.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$518 ($mux) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$204.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$517 ($reduce_or) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$181.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$561 ($reduce_or) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$181.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$560 ($and) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$181.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$559 ($and) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$181.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$558 ($mux) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$181.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$557 ($reduce_or) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$165.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$561 ($reduce_or) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$165.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$560 ($and) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$165.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$559 ($and) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$165.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$558 ($mux) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$165.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$557 ($reduce_or) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$81.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$647 ($reduce_or) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$81.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$646 ($reduce_or) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$81.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$645 ($reduce_or) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$81.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$644 ($and) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$81.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$643 ($and) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$81.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$642 ($and) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$81.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$641 ($and) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$81.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$640 ($mux) with simplemap.
Mapping tx_rx.$techmap$techmap\ft245_u.$procmux$81.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$639 ($reduce_or) with simplemap.
No more expansions possible.

4.14. Executing ICE40_OPT pass (performing simple optimizations).

4.14.1. Running ICE40 specific optimizations.

4.14.2. Executing OPT_EXPR pass (perform const folding).
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$376' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$370 [4] = \rst_cnt [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$374' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$370 [2] = \rst_cnt [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$373' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$370 [1] = \rst_cnt [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$372' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$370 [0] = \rst_cnt [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$387' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$370 [15] = \rst_cnt [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$386' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$370 [14] = \rst_cnt [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$385' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$370 [13] = \rst_cnt [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$384' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$370 [12] = \rst_cnt [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$383' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$370 [11] = \rst_cnt [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$382' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$370 [10] = \rst_cnt [10]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$350' in module `tx_rx'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$656' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$652 [2] = \ft245_u.cnt [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$655' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$652 [1] = \ft245_u.cnt [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$448' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$445 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$669' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$665 [2] = \ft245_u.cnt [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$667' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$665 [0] = \ft245_u.cnt [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$565' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$562 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$459' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$455 [2] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$458' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$455 [1] = $techmap\ft245_u.$logic_and$../../ft245.v:95$51_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$476' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$473 [1] = \ft245_u.rst'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$513' in module `tx_rx'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$756' (const_and) in module `\tx_rx' with constant driver `$techmap$techmap\ft245_u.$procmux$181.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$560_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$755' (and_or_buffer) in module `\tx_rx' with constant driver `$techmap$techmap\ft245_u.$procmux$181.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$561_Y = $techmap$techmap\ft245_u.$procmux$181.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$559_Y'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$576' in module `tx_rx'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$595' in module `tx_rx'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$596' in module `tx_rx'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$597' in module `tx_rx'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$598' in module `tx_rx'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$599' in module `tx_rx'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$600' in module `tx_rx'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$601' in module `tx_rx'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$602' in module `tx_rx'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$605' in module `tx_rx'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$789' (const_and) in module `\tx_rx' with constant driver `$techmap$techmap\ft245_u.$procmux$81.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$642_Y [0] = 1'0'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$648' in module `tx_rx'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$779' (and_or_buffer) in module `\tx_rx' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$778 [0] = $techmap$techmap\ft245_u.$procmux$81.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$641_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$790' (const_and) in module `\tx_rx' with constant driver `$techmap$techmap\ft245_u.$procmux$81.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$642_Y [1] = 1'0'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$649' in module `tx_rx'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$774' (and_or_buffer) in module `\tx_rx' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$773 [0] = $techmap$techmap\ft245_u.$procmux$81.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$641_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$791' (const_and) in module `\tx_rx' with constant driver `$techmap$techmap\ft245_u.$procmux$81.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$642_Y [2] = 1'0'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$650' in module `tx_rx'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$769' (and_or_buffer) in module `\tx_rx' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$768 [0] = $techmap$techmap\ft245_u.$procmux$81.$and$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:434$641_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$691' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$240.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$437_Y [0] = \ft245_u.cnt [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$692' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$240.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$437_Y [1] = \ft245_u.cnt [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$686' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$240.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$438_Y [1] = \ft245_u.cnt [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$693' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$240.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$437_Y [2] = \ft245_u.cnt [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$687' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$240.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$438_Y [2] = \ft245_u.cnt [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$710' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [0] = \rst_cnt [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$711' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [1] = \rst_cnt [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$695' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [1] = \rst_cnt [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$712' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [2] = \rst_cnt [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$696' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [2] = \rst_cnt [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$713' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [3] = \rst_cnt [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$697' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [3] = \rst_cnt [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$714' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [4] = \rst_cnt [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$698' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [4] = \rst_cnt [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$715' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [5] = \rst_cnt [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$699' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [5] = \rst_cnt [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$716' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [6] = \rst_cnt [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$700' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [6] = \rst_cnt [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$717' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [7] = \rst_cnt [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$701' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [7] = \rst_cnt [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$718' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [8] = \rst_cnt [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$702' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [8] = \rst_cnt [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$719' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [9] = \rst_cnt [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$703' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [9] = \rst_cnt [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$720' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [10] = \rst_cnt [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$704' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [10] = \rst_cnt [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$721' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [11] = \rst_cnt [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$705' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [11] = \rst_cnt [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$722' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [12] = \rst_cnt [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$706' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [12] = \rst_cnt [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$723' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [13] = \rst_cnt [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$707' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [13] = \rst_cnt [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$724' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [14] = \rst_cnt [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$708' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [14] = \rst_cnt [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$725' (??0) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:42$440_Y [15] = \rst_cnt [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$709' (0?) in module `\tx_rx' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$237.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$441_Y [15] = \rst_cnt [15]'.

4.14.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$685' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$654'.
    Redirecting output \Y: $techmap$auto$alumacc.cc:470:replace_alu$240.$xor$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/arith_map.v:68$438_Y [0] = $auto$simplemap.cc:250:simplemap_eqne$652 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$685' from module `\tx_rx'.
Removed a total of 1 cells.

4.14.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.14.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
  removing unused `\SB_CARRY' cell `$auto$alumacc.cc:470:replace_alu$240.slice[2].carry'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$410'.
  removing unused `\SB_CARRY' cell `$auto$alumacc.cc:470:replace_alu$237.slice[15].carry'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$688'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$689'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$690'.
  removing unused `$_XOR_' cell `$auto$simplemap.cc:85:simplemap_bitop$694'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$726'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$727'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$728'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$729'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$730'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$731'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$732'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$733'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$734'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$735'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$736'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$737'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$738'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$739'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$740'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$741'.
  removed 97 unused temporary wires.
Removed 36 unused cells and 200 unused wires.

4.14.6. Rerunning OPT passes. (Removed registers in this run.)

4.14.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell tx_rx.$auto$alumacc.cc:470:replace_alu$237.slice[0].carry: CO=\rst_cnt [0]
Optimized away SB_CARRY cell tx_rx.$auto$alumacc.cc:470:replace_alu$240.slice[0].carry: CO=\ft245_u.cnt [0]
Mapping SB_LUT4 cell tx_rx.$auto$alumacc.cc:470:replace_alu$237.slice[1].adder back to logic.
Mapping SB_LUT4 cell tx_rx.$auto$alumacc.cc:470:replace_alu$240.slice[1].adder back to logic.

4.14.8. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$830' (100) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$822 [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$829' (010) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$822 [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$835' (010) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$831 [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$828' (010) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$822 [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$827' (100) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$822 [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$834' (100) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$831 [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$826' (010) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$822 [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$825' (100) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$822 [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$833' (100) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$831 [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$824' (100) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$822 [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$823' (010) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$822 [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$832' (010) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$831 [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$837' (01?) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$836 [0] = \ft245_u.cnt [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$811' (100) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$803 [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$810' (010) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$803 [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$816' (010) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$812 [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$809' (010) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$803 [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$808' (100) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$803 [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$815' (100) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$812 [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$807' (010) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$803 [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$806' (100) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$803 [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$814' (100) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$812 [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$805' (100) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$803 [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$804' (010) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$803 [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$813' (010) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$812 [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$818' (01?) in module `\tx_rx' with constant driver `$auto$simplemap.cc:309:simplemap_lut$817 [0] = \rst_cnt [1]'.

4.14.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
Removed a total of 0 cells.

4.14.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.14.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
  removed 5 unused temporary wires.
Removed 36 unused cells and 205 unused wires.

4.14.12. Rerunning OPT passes. (Removed registers in this run.)

4.14.13. Running ICE40 specific optimizations.

4.14.14. Executing OPT_EXPR pass (perform const folding).

4.14.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
Removed a total of 0 cells.

4.14.16. Executing OPT_RMDFF pass (remove dff with constant values).

4.14.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
Removed 36 unused cells and 205 unused wires.

4.14.18. Finished OPT passes. (There is nothing left to do.)

4.15. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

4.16. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module tx_rx:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$411 to $_DFFE_PP_ for $0\leds[7:0] [0] -> \leds [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$412 to $_DFFE_PP_ for $0\leds[7:0] [1] -> \leds [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$413 to $_DFFE_PP_ for $0\leds[7:0] [2] -> \leds [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$414 to $_DFFE_PP_ for $0\leds[7:0] [3] -> \leds [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$415 to $_DFFE_PP_ for $0\leds[7:0] [4] -> \leds [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$416 to $_DFFE_PP_ for $0\leds[7:0] [5] -> \leds [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$417 to $_DFFE_PP_ for $0\leds[7:0] [6] -> \leds [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$418 to $_DFFE_PP_ for $0\leds[7:0] [7] -> \leds [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$419 to $_DFFE_PP_ for $0\start[0:0] -> \start.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$421 to $_DFFE_PP_ for $0\rst_cnt[15:0] [1] -> \rst_cnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$484 to $_DFFE_PP_ for $techmap\ft245_u.$0\cnt[2:0] [0] -> \ft245_u.cnt [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$485 to $_DFFE_PP_ for $techmap\ft245_u.$0\cnt[2:0] [1] -> \ft245_u.cnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$486 to $_DFFE_PP_ for $techmap\ft245_u.$0\cnt[2:0] [2] -> \ft245_u.cnt [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$489 to $_DFFE_PP_ for $techmap\ft245_u.$0\rx_data_si[7:0] [0] -> \ft245_u.rx_data_si [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$490 to $_DFFE_PP_ for $techmap\ft245_u.$0\rx_data_si[7:0] [1] -> \ft245_u.rx_data_si [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$491 to $_DFFE_PP_ for $techmap\ft245_u.$0\rx_data_si[7:0] [2] -> \ft245_u.rx_data_si [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$492 to $_DFFE_PP_ for $techmap\ft245_u.$0\rx_data_si[7:0] [3] -> \ft245_u.rx_data_si [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$493 to $_DFFE_PP_ for $techmap\ft245_u.$0\rx_data_si[7:0] [4] -> \ft245_u.rx_data_si [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$494 to $_DFFE_PP_ for $techmap\ft245_u.$0\rx_data_si[7:0] [5] -> \ft245_u.rx_data_si [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$495 to $_DFFE_PP_ for $techmap\ft245_u.$0\rx_data_si[7:0] [6] -> \ft245_u.rx_data_si [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$496 to $_DFFE_PP_ for $techmap\ft245_u.$0\rx_data_si[7:0] [7] -> \ft245_u.rx_data_si [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$497 to $_DFFE_PP_ for $techmap\ft245_u.$0\tx_oe_245[0:0] -> \ft245_u.tx_oe_245.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$499 to $_DFFE_PP_ for $techmap\ft245_u.$0\tx_data_245[7:0] [0] -> \ft245_u.tx_data_245 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$500 to $_DFFE_PP_ for $techmap\ft245_u.$0\tx_data_245[7:0] [1] -> \ft245_u.tx_data_245 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$501 to $_DFFE_PP_ for $techmap\ft245_u.$0\tx_data_245[7:0] [2] -> \ft245_u.tx_data_245 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$502 to $_DFFE_PP_ for $techmap\ft245_u.$0\tx_data_245[7:0] [3] -> \ft245_u.tx_data_245 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$503 to $_DFFE_PP_ for $techmap\ft245_u.$0\tx_data_245[7:0] [4] -> \ft245_u.tx_data_245 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$504 to $_DFFE_PP_ for $techmap\ft245_u.$0\tx_data_245[7:0] [5] -> \ft245_u.tx_data_245 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$505 to $_DFFE_PP_ for $techmap\ft245_u.$0\tx_data_245[7:0] [6] -> \ft245_u.tx_data_245 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$506 to $_DFFE_PP_ for $techmap\ft245_u.$0\tx_data_245[7:0] [7] -> \ft245_u.tx_data_245 [7].

4.17. Executing TECHMAP pass (map to technology primitives).

4.17.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$411 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$435 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$434 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$433 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$432 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$431 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$430 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$429 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$428 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$427 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$426 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$425 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$424 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$423 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$422 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$421 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$420 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$419 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$418 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$417 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$416 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$415 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$414 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$413 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$412 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$484 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$485 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$486 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$487 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$488 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$489 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$490 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$491 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$492 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$493 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$494 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$495 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$496 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$497 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$498 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$499 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$500 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$501 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$502 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$503 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$504 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$505 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$506 using \$_DFFE_PP_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$507 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$634 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$635 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$636 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$637 using \$_DFF_P_.
Mapping tx_rx.$auto$simplemap.cc:420:simplemap_dff$638 using \$_DFF_P_.
No more expansions possible.

4.18. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$364' (x??) in module `\tx_rx' with constant driver `$procmux$69_Y [5] = $auto$wreduce.cc:347:run$235 [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$362' (x??) in module `\tx_rx' with constant driver `$procmux$69_Y [3] = $auto$wreduce.cc:347:run$235 [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$366' (x1?) in module `\tx_rx' with constant driver `$procmux$69_Y [7] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1082' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1079 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1081' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1079 [0] = \ft245_u.state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1091' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1088 [1] = \ft245_u.rst'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$365' (x??) in module `\tx_rx' with constant driver `$procmux$69_Y [6] = $auto$wreduce.cc:347:run$235 [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$991' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$988 [1] = \ft245_u.rst'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$360' (x??) in module `\tx_rx' with constant driver `$procmux$69_Y [1] = $auto$wreduce.cc:347:run$235 [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$359' (x1?) in module `\tx_rx' with constant driver `$procmux$69_Y [0] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1372' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1368 [2] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1288' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1286 [0] = $techmap\ft245_u.$logic_and$../../ft245.v:99$54_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$361' (x??) in module `\tx_rx' with constant driver `$procmux$69_Y [2] = $auto$wreduce.cc:347:run$235 [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1370' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1368 [0] = $techmap\ft245_u.$logic_and$../../ft245.v:99$54_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1353' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1350 [1] = \ft245_u.rst'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$363' (x??) in module `\tx_rx' with constant driver `$procmux$69_Y [4] = $auto$wreduce.cc:347:run$235 [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$930' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$927 [1] = $techmap$techmap\ft245_u.$procmux$81.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$639_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$350' (1x?) in module `\tx_rx' with constant driver `$0\start[0:0] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$929' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$927 [0] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1312' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1309 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1291' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1286 [3] = $auto$simplemap.cc:250:simplemap_eqne$455 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1290' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1286 [2] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1303' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1300 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1302' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1300 [0] = \ft245_u.state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$956' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$954 [0] = \ft245_u.state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1066' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1063 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1168' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1163 [3] = $auto$simplemap.cc:250:simplemap_eqne$455 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1167' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1163 [2] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1165' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1163 [0] = $techmap\ft245_u.$logic_and$../../ft245.v:99$54_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1454' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1450 [2] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1373' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1368 [3] = $auto$simplemap.cc:250:simplemap_eqne$455 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1329' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1327 [0] = $techmap\ft245_u.$logic_and$../../ft245.v:99$54_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1455' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1450 [3] = $auto$simplemap.cc:250:simplemap_eqne$455 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1476' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1473 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1452' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1450 [0] = $techmap\ft245_u.$logic_and$../../ft245.v:99$54_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1435' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1432 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1411' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1409 [0] = $techmap\ft245_u.$logic_and$../../ft245.v:99$54_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1413' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1409 [2] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1414' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1409 [3] = $auto$simplemap.cc:250:simplemap_eqne$455 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1425' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1423 [0] = \ft245_u.state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1426' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1423 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$938' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$936 [0] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$939' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$936 [1] = $techmap$techmap\ft245_u.$procmux$81.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$639_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1107' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1104 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1106' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1104 [0] = \ft245_u.state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1116' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1113 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$947' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$945 [0] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1466' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1464 [0] = \ft245_u.state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1467' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1464 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$948' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$945 [1] = $techmap$techmap\ft245_u.$procmux$81.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$639_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1384' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1382 [0] = \ft245_u.state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1385' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1382 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1394' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1391 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1271' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1268 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1262' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1259 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1261' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1259 [0] = \ft245_u.state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1250' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1245 [3] = $auto$simplemap.cc:250:simplemap_eqne$455 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1249' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1245 [2] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1247' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1245 [0] = $techmap\ft245_u.$logic_and$../../ft245.v:99$54_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1344' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1341 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1343' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1341 [0] = \ft245_u.state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1331' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1327 [2] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1332' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1327 [3] = $auto$simplemap.cc:250:simplemap_eqne$455 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$957' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$954 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$966' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$963 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$923' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$921 = \rst_cnt [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1230' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1227 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1221' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1218 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1220' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1218 [0] = \ft245_u.state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1209' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1204 [3] = $auto$simplemap.cc:250:simplemap_eqne$455 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1208' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1204 [2] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1206' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1204 [0] = $techmap\ft245_u.$logic_and$../../ft245.v:99$54_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1189' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1186 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1180' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1177 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1179' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1177 [0] = \ft245_u.state [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$872' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$870 [0] = \ft245_u.rx_rdy_si'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$909' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$906 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$908' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$906 [0] = \ft245_u.rx_rdy_si'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$900' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$897 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$899' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$897 [0] = \ft245_u.rx_rdy_si'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1056' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1054 [0] = \ft245_u.state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1057' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1054 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$891' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$888 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$890' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$888 [0] = \ft245_u.rx_rdy_si'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$548' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$193_Y [0] = \ft245_u.rx_data_si [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$540' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$196_Y [0] = \ft245_u.rx_data_si [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$531' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$198_Y [0] = \ft245_u.rx_data_si [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$549' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$193_Y [1] = \ft245_u.rx_data_si [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$541' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$196_Y [1] = \ft245_u.rx_data_si [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$532' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$198_Y [1] = \ft245_u.rx_data_si [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$882' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$879 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$881' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$879 [0] = \ft245_u.rx_rdy_si'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$550' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$193_Y [2] = \ft245_u.rx_data_si [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$542' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$196_Y [2] = \ft245_u.rx_data_si [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$533' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$198_Y [2] = \ft245_u.rx_data_si [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$551' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$193_Y [3] = \ft245_u.rx_data_si [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$543' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$196_Y [3] = \ft245_u.rx_data_si [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$534' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$198_Y [3] = \ft245_u.rx_data_si [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1157' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1154 [1] = $techmap$techmap\ft245_u.$procmux$165.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$557_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1156' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1154 [0] = \ft245_u.rst'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$552' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$193_Y [4] = \ft245_u.rx_data_si [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$544' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$196_Y [4] = \ft245_u.rx_data_si [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$535' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$198_Y [4] = \ft245_u.rx_data_si [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$553' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$193_Y [5] = \ft245_u.rx_data_si [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$545' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$196_Y [5] = \ft245_u.rx_data_si [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$536' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$198_Y [5] = \ft245_u.rx_data_si [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$554' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$193_Y [6] = \ft245_u.rx_data_si [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$546' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$196_Y [6] = \ft245_u.rx_data_si [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$537' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$198_Y [6] = \ft245_u.rx_data_si [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$555' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$193_Y [7] = \ft245_u.rx_data_si [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$547' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$196_Y [7] = \ft245_u.rx_data_si [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$538' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$198_Y [7] = \ft245_u.rx_data_si [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$873' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$870 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1141' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1138 [1] = \ft245_u.rst'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$765' (x??) in module `\tx_rx' with constant driver `$techmap$techmap\ft245_u.$procmux$165.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$558_Y = $techmap$techmap\ft245_u.$procmux$165.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$561_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$863' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$861 [0] = \ft245_u.rx_rdy_si'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$864' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$861 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$854' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$852 [0] = \ft245_u.rx_rdy_si'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$855' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$852 [1] = \ft245_u.rst'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$595' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$154_Y [0] = \ft245_u.rx_data_245 [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$585' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$156_Y [0] = \ft245_u.rx_data_245 [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$596' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$154_Y [1] = \ft245_u.rx_data_245 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$586' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$156_Y [1] = \ft245_u.rx_data_245 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$597' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$154_Y [2] = \ft245_u.rx_data_245 [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$587' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$156_Y [2] = \ft245_u.rx_data_245 [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$598' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$154_Y [3] = \ft245_u.rx_data_245 [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$588' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$156_Y [3] = \ft245_u.rx_data_245 [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$599' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$154_Y [4] = \ft245_u.rx_data_245 [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$589' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$156_Y [4] = \ft245_u.rx_data_245 [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$600' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$154_Y [5] = \ft245_u.rx_data_245 [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$590' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$156_Y [5] = \ft245_u.rx_data_245 [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$601' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$154_Y [6] = \ft245_u.rx_data_245 [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$591' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$156_Y [6] = \ft245_u.rx_data_245 [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$602' (?x?) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$154_Y [7] = \ft245_u.rx_data_245 [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$592' (x??) in module `\tx_rx' with constant driver `$techmap\ft245_u.$procmux$156_Y [7] = \ft245_u.rx_data_245 [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$795' (x??) in module `\tx_rx' with constant driver `$techmap$techmap\ft245_u.$procmux$81.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$640_Y [0] = $techmap$techmap\ft245_u.$procmux$81.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$645_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$796' (x??) in module `\tx_rx' with constant driver `$techmap$techmap\ft245_u.$procmux$81.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$640_Y [1] = $techmap$techmap\ft245_u.$procmux$81.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$646_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$797' (x??) in module `\tx_rx' with constant driver `$techmap$techmap\ft245_u.$procmux$81.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$640_Y [2] = $techmap$techmap\ft245_u.$procmux$81.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$647_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$821' (x??) in module `\tx_rx' with constant driver `$0\rst_cnt[15:0] [1] = $auto$simplemap.cc:309:simplemap_lut$817 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1132' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1129 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1131' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1129 [0] = \ft245_u.state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1041' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1038 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$982' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$979 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$981' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$979 [0] = \ft245_u.state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1031' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1029 [0] = \ft245_u.state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1016' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1013 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1006' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1004 [0] = \ft245_u.state [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1032' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1029 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1007' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1004 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$846' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$843 [1] = \ft245_u.rst'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$845' (?0) in module `\tx_rx' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$843 [0] = \ft245_u.rx_rdy_si'.

4.19. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.20. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in tx_rx.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$419 (SB_DFFE): \start = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$420 (SB_DFF): \rst_cnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$421 (SB_DFFE): \rst_cnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$422 (SB_DFF): \rst_cnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$423 (SB_DFF): \rst_cnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$424 (SB_DFF): \rst_cnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$425 (SB_DFF): \rst_cnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$426 (SB_DFF): \rst_cnt [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$427 (SB_DFF): \rst_cnt [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$428 (SB_DFF): \rst_cnt [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$429 (SB_DFF): \rst_cnt [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$430 (SB_DFF): \rst_cnt [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$431 (SB_DFF): \rst_cnt [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$432 (SB_DFF): \rst_cnt [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$433 (SB_DFF): \rst_cnt [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$434 (SB_DFF): \rst_cnt [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$435 (SB_DFF): \rst_cnt [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$497 (SB_DFFE): \ft245_u.tx_oe_245 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$498 (SB_DFF): \ft245_u.wr_245 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$507 (SB_DFF): \ft245_u.rx_245 = 0

4.21. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in tx_rx.
  Merging $auto$simplemap.cc:277:simplemap_mux$358 (A=1'1, B=\ft245_u.rx_data_si [7], S=\ft245_u.rx_rdy_si) into $auto$simplemap.cc:420:simplemap_dff$418 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$351 (A=1'1, B=\ft245_u.rx_data_si [0], S=\ft245_u.rx_rdy_si) into $auto$simplemap.cc:420:simplemap_dff$411 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$624 (A=$techmap$techmap\ft245_u.$procmux$81.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$645_Y, B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$484 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$625 (A=$techmap$techmap\ft245_u.$procmux$81.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$646_Y, B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$485 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$626 (A=$techmap$techmap\ft245_u.$procmux$81.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$647_Y, B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$486 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$606 (A=$techmap\ft245_u.$procmux$132_Y, B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$487 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$603 (A=$techmap\ft245_u.$procmux$144_Y, B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$488 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$577 (A=\ft245_u.rx_data_245 [0], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$489 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$578 (A=\ft245_u.rx_data_245 [1], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$490 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$579 (A=\ft245_u.rx_data_245 [2], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$491 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$580 (A=\ft245_u.rx_data_245 [3], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$492 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$581 (A=\ft245_u.rx_data_245 [4], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$493 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$582 (A=\ft245_u.rx_data_245 [5], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$494 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$583 (A=\ft245_u.rx_data_245 [6], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$495 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$584 (A=\ft245_u.rx_data_245 [7], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$496 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$572 (A=$techmap$techmap\ft245_u.$procmux$165.$reduce_or$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:441$561_Y, B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$497 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$556 (A=$techmap$techmap\ft245_u.$procmux$181.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$558_Y, B=1'1, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$498 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$523 (A=\ft245_u.rx_data_si [0], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$499 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$524 (A=\ft245_u.rx_data_si [1], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$500 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$525 (A=\ft245_u.rx_data_si [2], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$501 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$526 (A=\ft245_u.rx_data_si [3], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$502 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$527 (A=\ft245_u.rx_data_si [4], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$503 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$528 (A=\ft245_u.rx_data_si [5], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$504 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$529 (A=\ft245_u.rx_data_si [6], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$505 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$530 (A=\ft245_u.rx_data_si [7], B=1'0, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$506 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$508 (A=$techmap$techmap\ft245_u.$procmux$204.$ternary$/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/techmap.v:445$518_Y, B=1'1, S=\ft245_u.rst) into $auto$simplemap.cc:420:simplemap_dff$507 (SB_DFF).

4.22. Executing ICE40_OPT pass (performing simple optimizations).

4.22.1. Running ICE40 specific optimizations.

4.22.2. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$508' in module `tx_rx' with or-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$556' in module `tx_rx' with or-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$574' in module `tx_rx' with or-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$576' in module `tx_rx' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$607' in module `tx_rx' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$648' in module `tx_rx' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$649' in module `tx_rx' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$650' in module `tx_rx' with and-gate.

4.22.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
  Cell `$auto$ice40_ffssr.cc:106:execute$1553' is identical to cell `$auto$ice40_ffssr.cc:106:execute$1555'.
    Redirecting output \Y: $auto$rtlil.cc:1735:NotGate$1554 = $auto$rtlil.cc:1735:NotGate$1556
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$1553' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1090' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1088 [0] = $auto$simplemap.cc:250:simplemap_eqne$1113 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1090' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1092' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1117'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1088 [2] = $auto$simplemap.cc:250:simplemap_eqne$1113 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1092' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1095' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1120'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1094 = $auto$simplemap.cc:127:simplemap_reduce$1119
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1095' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1085' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1110'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1077 = $auto$dff2dffe.cc:158:make_patterns_logic$1102
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1085' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1065' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1063 [0] = $auto$simplemap.cc:250:simplemap_eqne$1113 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1065' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1067' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1117'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1063 [2] = $auto$simplemap.cc:250:simplemap_eqne$1113 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1067' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1070' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1120'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1069 = $auto$simplemap.cc:127:simplemap_reduce$1119
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1070' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1434' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1432 [0] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1434' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1289' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1286 [1] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1289' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1060' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1110'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1052 = $auto$dff2dffe.cc:158:make_patterns_logic$1102
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1060' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1040' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1038 [0] = $auto$simplemap.cc:250:simplemap_eqne$1113 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1040' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1042' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1117'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1038 [2] = $auto$simplemap.cc:250:simplemap_eqne$1113 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1042' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1045' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1120'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1044 = $auto$simplemap.cc:127:simplemap_reduce$1119
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1045' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1135' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1110'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1127 = $auto$dff2dffe.cc:158:make_patterns_logic$1102
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1135' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1035' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1110'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1027 = $auto$dff2dffe.cc:158:make_patterns_logic$1102
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1035' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1015' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1013 [0] = $auto$simplemap.cc:250:simplemap_eqne$1113 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1015' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1017' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1117'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1013 [2] = $auto$simplemap.cc:250:simplemap_eqne$1113 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1017' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1020' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1120'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1019 = $auto$simplemap.cc:127:simplemap_reduce$1119
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1020' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1010' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1110'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1002 = $auto$dff2dffe.cc:158:make_patterns_logic$1102
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1010' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1371' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1368 [1] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1371' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$990' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$988 [0] = $auto$simplemap.cc:250:simplemap_eqne$1113 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$990' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$992' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1117'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$988 [2] = $auto$simplemap.cc:250:simplemap_eqne$1113 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$992' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$995' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1120'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$994 = $auto$simplemap.cc:127:simplemap_reduce$1119
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$995' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1142' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1117'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1138 [2] = $auto$simplemap.cc:250:simplemap_eqne$1113 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1142' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1140' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1138 [0] = $auto$simplemap.cc:250:simplemap_eqne$1113 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1140' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$985' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1110'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$977 = $auto$dff2dffe.cc:158:make_patterns_logic$1102
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$985' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1330' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1327 [1] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1330' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$965' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1115'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$963 [0] = $auto$simplemap.cc:250:simplemap_eqne$1113 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$965' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$967' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1117'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$963 [2] = $auto$simplemap.cc:250:simplemap_eqne$1113 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$967' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$970' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1120'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$969 = $auto$simplemap.cc:127:simplemap_reduce$1119
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$970' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1395' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1477'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1391 [2] = $auto$simplemap.cc:250:simplemap_eqne$1473 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1395' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$960' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1110'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$952 = $auto$dff2dffe.cc:158:make_patterns_logic$1102
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$960' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1412' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1409 [1] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1412' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1377' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1418'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1375 [1] = $auto$simplemap.cc:127:simplemap_reduce$1416 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1377' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$942' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$951'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$934 = $auto$dff2dffe.cc:158:make_patterns_logic$943
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$942' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1459' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1418'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1457 [1] = $auto$simplemap.cc:127:simplemap_reduce$1416 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1459' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$933' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$951'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$925 = $auto$dff2dffe.cc:158:make_patterns_logic$943
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$933' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1306' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1388'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1298 = $auto$dff2dffe.cc:158:make_patterns_logic$1380
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1306' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1436' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1477'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1432 [2] = $auto$simplemap.cc:250:simplemap_eqne$1473 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1436' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1294' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1335'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1293 [0] = $auto$simplemap.cc:127:simplemap_reduce$1334 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1294' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$903' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$912'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$895 = $auto$dff2dffe.cc:158:make_patterns_logic$904
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$903' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$894' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$912'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$886 = $auto$dff2dffe.cc:158:make_patterns_logic$904
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$894' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1272' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1477'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1268 [2] = $auto$simplemap.cc:250:simplemap_eqne$1473 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1272' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$885' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$912'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$877 = $auto$dff2dffe.cc:158:make_patterns_logic$904
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$885' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$876' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$912'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$868 = $auto$dff2dffe.cc:158:make_patterns_logic$904
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$876' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1207' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1204 [1] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1207' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$867' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$912'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$859 = $auto$dff2dffe.cc:158:make_patterns_logic$904
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$867' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1213' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1418'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1211 [1] = $auto$simplemap.cc:127:simplemap_reduce$1416 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1213' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$858' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$912'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$850 = $auto$dff2dffe.cc:158:make_patterns_logic$904
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$858' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$849' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$912'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$841 = $auto$dff2dffe.cc:158:make_patterns_logic$904
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$849' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1470' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1388'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1462 = $auto$dff2dffe.cc:158:make_patterns_logic$1380
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1470' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1453' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1450 [1] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1453' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1393' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1391 [0] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1393' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1480' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1439'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1479 = $auto$simplemap.cc:127:simplemap_reduce$1438
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1480' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1482' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1441'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1471 = $auto$dff2dffe.cc:158:make_patterns_logic$1430
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1482' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1270' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1268 [0] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1270' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1265' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1388'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1257 = $auto$dff2dffe.cc:158:make_patterns_logic$1380
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1265' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1224' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1388'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1216 = $auto$dff2dffe.cc:158:make_patterns_logic$1380
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1224' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1254' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1418'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1252 [1] = $auto$simplemap.cc:127:simplemap_reduce$1416 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1254' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1231' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1477'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1227 [2] = $auto$simplemap.cc:250:simplemap_eqne$1473 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1231' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1336' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1418'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1334 [1] = $auto$simplemap.cc:127:simplemap_reduce$1416 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1336' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1295' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1418'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1293 [1] = $auto$simplemap.cc:127:simplemap_reduce$1416 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1295' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1352' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1350 [0] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1352' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1354' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1477'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1350 [2] = $auto$simplemap.cc:250:simplemap_eqne$1473 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1354' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1229' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1227 [0] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1229' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1311' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1309 [0] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1311' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1190' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1477'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1186 [2] = $auto$simplemap.cc:250:simplemap_eqne$1473 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1190' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1316' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1439'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1315 = $auto$simplemap.cc:127:simplemap_reduce$1438
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1316' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1183' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1388'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1175 = $auto$dff2dffe.cc:158:make_patterns_logic$1380
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1183' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1166' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1163 [1] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1166' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1429' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1388'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1421 = $auto$dff2dffe.cc:158:make_patterns_logic$1380
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1429' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1188' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1186 [0] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1188' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1193' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1439'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1192 = $auto$simplemap.cc:127:simplemap_reduce$1438
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1193' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1313' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1477'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1309 [2] = $auto$simplemap.cc:250:simplemap_eqne$1473 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1313' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1171' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1335'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1170 [0] = $auto$simplemap.cc:127:simplemap_reduce$1334 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1171' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1417' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1335'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1416 [0] = $auto$simplemap.cc:127:simplemap_reduce$1334 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1417' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1318' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1441'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1307 = $auto$dff2dffe.cc:158:make_patterns_logic$1430
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1318' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1172' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1418'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1170 [1] = $auto$simplemap.cc:127:simplemap_reduce$1416 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1172' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1347' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1388'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1339 = $auto$dff2dffe.cc:158:make_patterns_logic$1380
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1347' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1248' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1475'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1245 [1] = $auto$simplemap.cc:250:simplemap_eqne$1473 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1248' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:37:simplemap_not$681' is identical to cell `$auto$ice40_ffssr.cc:106:execute$1555'.
    Redirecting output \Y: $techmap\ft245_u.$eq$../../ft245.v:95$50_Y = $auto$rtlil.cc:1735:NotGate$1556
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$681' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$475' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1477'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$473 [0] = $auto$simplemap.cc:250:simplemap_eqne$1473 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$475' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1439' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1398'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1438 = $auto$simplemap.cc:127:simplemap_reduce$1397
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1439' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1376' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1212'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1375 [0] = $auto$simplemap.cc:127:simplemap_reduce$1211 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1376' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1122' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$997'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1111 = $auto$dff2dffe.cc:158:make_patterns_logic$986
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1122' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1097' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$997'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1086 = $auto$dff2dffe.cc:158:make_patterns_logic$986
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1097' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$972' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$997'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$961 = $auto$dff2dffe.cc:158:make_patterns_logic$986
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$972' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1047' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$997'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1036 = $auto$dff2dffe.cc:158:make_patterns_logic$986
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1047' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1215' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1379'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1202 = $auto$dff2dffe.cc:158:make_patterns_logic$1366
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1215' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1357' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1398'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1356 = $auto$simplemap.cc:127:simplemap_reduce$1397
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1357' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1234' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1398'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1233 = $auto$simplemap.cc:127:simplemap_reduce$1397
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1234' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1359' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1441'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1348 = $auto$dff2dffe.cc:158:make_patterns_logic$1430
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1359' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1404' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1240'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1403 = $auto$simplemap.cc:127:simplemap_reduce$1239
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1404' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1236' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1441'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1225 = $auto$dff2dffe.cc:158:make_patterns_logic$1430
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1236' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1335' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1212'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1334 [0] = $auto$simplemap.cc:127:simplemap_reduce$1211 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1335' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1458' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1212'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1457 [0] = $auto$simplemap.cc:127:simplemap_reduce$1211 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1458' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1253' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1212'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1252 [0] = $auto$simplemap.cc:127:simplemap_reduce$1211 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1253' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1022' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$997'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1011 = $auto$dff2dffe.cc:158:make_patterns_logic$986
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1022' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1174' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1379'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1161 = $auto$dff2dffe.cc:158:make_patterns_logic$1366
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1174' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1400' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1441'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1389 = $auto$dff2dffe.cc:158:make_patterns_logic$1430
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1400' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1199' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1240'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1198 = $auto$simplemap.cc:127:simplemap_reduce$1239
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1199' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1195' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1441'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1184 = $auto$dff2dffe.cc:158:make_patterns_logic$1430
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1195' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1120' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1145'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1119 = $auto$simplemap.cc:127:simplemap_reduce$1144
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1120' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1297' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1379'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1284 = $auto$dff2dffe.cc:158:make_patterns_logic$1366
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1297' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1420' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1379'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1407 = $auto$dff2dffe.cc:158:make_patterns_logic$1366
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1420' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1072' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1147'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1061 = $auto$dff2dffe.cc:158:make_patterns_logic$1136
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1072' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1406' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1242'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$1401 = $auto$dff2dffe.cc:175:make_patterns_logic$1237
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1406' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1461' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1379'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1448 = $auto$dff2dffe.cc:158:make_patterns_logic$1366
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1461' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1126' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1001'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$1123 = $auto$dff2dffe.cc:175:make_patterns_logic$998
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1126' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1486' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1240'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1485 = $auto$simplemap.cc:127:simplemap_reduce$1239
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1486' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1275' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1398'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1274 = $auto$simplemap.cc:127:simplemap_reduce$1397
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1275' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$976' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1051'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$973 = $auto$dff2dffe.cc:175:make_patterns_logic$1048
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$976' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1001' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1051'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$998 = $auto$dff2dffe.cc:175:make_patterns_logic$1048
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1001' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1240' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1445'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1239 = $auto$simplemap.cc:127:simplemap_reduce$1444
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1240' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1101' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1051'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$1098 = $auto$dff2dffe.cc:175:make_patterns_logic$1048
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1101' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1256' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1338'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1243 = $auto$dff2dffe.cc:158:make_patterns_logic$1325
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1256' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1379' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1338'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1366 = $auto$dff2dffe.cc:158:make_patterns_logic$1325
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1379' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1277' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1441'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1266 = $auto$dff2dffe.cc:158:make_patterns_logic$1430
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1277' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1201' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1242'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$1196 = $auto$dff2dffe.cc:175:make_patterns_logic$1237
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1201' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1363' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1322'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1362 = $auto$simplemap.cc:127:simplemap_reduce$1321
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1363' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1026' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1051'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$1023 = $auto$dff2dffe.cc:175:make_patterns_logic$1048
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1026' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1447' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1242'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$1442 = $auto$dff2dffe.cc:175:make_patterns_logic$1237
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1447' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1147' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$997'.
    Redirecting output \Y: $auto$dff2dffe.cc:158:make_patterns_logic$1136 = $auto$dff2dffe.cc:158:make_patterns_logic$986
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1147' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1076' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1051'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$1073 = $auto$dff2dffe.cc:175:make_patterns_logic$1048
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1076' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1151' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1051'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$1148 = $auto$dff2dffe.cc:175:make_patterns_logic$1048
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1151' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1324' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1365'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$1319 = $auto$dff2dffe.cc:175:make_patterns_logic$1360
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1324' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1281' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1445'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1280 = $auto$simplemap.cc:127:simplemap_reduce$1444
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1281' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1242' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1488'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$1237 = $auto$dff2dffe.cc:175:make_patterns_logic$1483
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1242' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1322' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1445'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1321 = $auto$simplemap.cc:127:simplemap_reduce$1444
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1322' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1488' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1365'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$1483 = $auto$dff2dffe.cc:175:make_patterns_logic$1360
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1488' from module `\tx_rx'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1283' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1365'.
    Redirecting output \Y: $auto$dff2dffe.cc:175:make_patterns_logic$1278 = $auto$dff2dffe.cc:175:make_patterns_logic$1360
    Removing $_AND_ cell `$auto$simplemap.cc:136:simplemap_reduce$1283' from module `\tx_rx'.
Removed a total of 132 cells.

4.22.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$358'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$351'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:277:simplemap_mux$508'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$523'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$524'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$525'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$526'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$527'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$528'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$529'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$530'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:277:simplemap_mux$556'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$572'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$577'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$578'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$579'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$580'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$581'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$582'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$583'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$584'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$603'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$606'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$624'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$625'.
  removing unused `$_MUX_' cell `$auto$simplemap.cc:277:simplemap_mux$626'.
  removed 420 unused temporary wires.
Removed 62 unused cells and 625 unused wires.

4.22.6. Rerunning OPT passes. (Removed registers in this run.)

4.22.7. Running ICE40 specific optimizations.

4.22.8. Executing OPT_EXPR pass (perform const folding).

4.22.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tx_rx'.
Removed a total of 0 cells.

4.22.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.22.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tx_rx..
Removed 62 unused cells and 625 unused wires.

4.22.12. Finished OPT passes. (There is nothing left to do.)

4.23. Executing TECHMAP pass (map to technology primitives).

4.23.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.
No more expansions possible.

4.24. Executing ABC pass (technology mapping using ABC).

4.24.1. Extracting gate netlist of module `\tx_rx' to `<abc-temp-dir>/input.blif'..
Extracted 155 gates and 198 wires to a netlist network with 41 inputs and 28 outputs.

4.24.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.24.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       86
ABC RESULTS:        internal signals:      129
ABC RESULTS:           input signals:       41
ABC RESULTS:          output signals:       28
Removing temp directory.
Removed 0 unused cells and 159 unused wires.

4.25. Executing TECHMAP pass (map to technology primitives).

4.25.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/media/win7/Users/JMR/Documents/ariel/programas/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.25.2. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'00010000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'00010000'.

4.25.3. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1563 using $paramod\$lut\WIDTH=3\LUT=8'00010000.

4.25.4. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'01000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'01000000'.

4.25.5. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1567 using $paramod\$lut\WIDTH=3\LUT=8'01000000.

4.25.6. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 2
Parameter \LUT = 4'1000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=2\LUT=4'1000'.

4.25.7. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1562 using $paramod\$lut\WIDTH=2\LUT=4'1000.

4.25.8. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 2
Parameter \LUT = 4'1011
Generating RTLIL representation for module `$paramod\$lut\WIDTH=2\LUT=4'1011'.

4.25.9. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1564 using $paramod\$lut\WIDTH=2\LUT=4'1011.

4.25.10. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 2
Parameter \LUT = 4'1110
Generating RTLIL representation for module `$paramod\$lut\WIDTH=2\LUT=4'1110'.

4.25.11. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1561 using $paramod\$lut\WIDTH=2\LUT=4'1110.

4.25.12. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'1111010000000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'1111010000000000'.

4.25.13. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1578 using $paramod\$lut\WIDTH=4\LUT=16'1111010000000000.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1577 using $paramod\$lut\WIDTH=2\LUT=4'1110.

4.25.14. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'11111110
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'11111110'.

4.25.15. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1565 using $paramod\$lut\WIDTH=3\LUT=8'11111110.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1566 using $paramod\$lut\WIDTH=2\LUT=4'1110.

4.25.16. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'11100000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'11100000'.

4.25.17. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1576 using $paramod\$lut\WIDTH=3\LUT=8'11100000.

4.25.18. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0000000011110001
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0000000011110001'.

4.25.19. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1580 using $paramod\$lut\WIDTH=4\LUT=16'0000000011110001.

4.25.20. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'1010101100110000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'1010101100110000'.

4.25.21. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1581 using $paramod\$lut\WIDTH=4\LUT=16'1010101100110000.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1569 using $paramod\$lut\WIDTH=3\LUT=8'00010000.

4.25.22. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0000000011110100
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0000000011110100'.

4.25.23. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1568 using $paramod\$lut\WIDTH=4\LUT=16'0000000011110100.

4.25.24. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'1110111100000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'1110111100000000'.

4.25.25. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1572 using $paramod\$lut\WIDTH=4\LUT=16'1110111100000000.

4.25.26. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'00001110
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'00001110'.

4.25.27. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1571 using $paramod\$lut\WIDTH=3\LUT=8'00001110.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1570 using $paramod\$lut\WIDTH=4\LUT=16'0000000011110100.

4.25.28. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0001000000000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0001000000000000'.

4.25.29. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1575 using $paramod\$lut\WIDTH=4\LUT=16'0001000000000000.

4.25.30. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0000000001001111
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0000000001001111'.

4.25.31. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1574 using $paramod\$lut\WIDTH=4\LUT=16'0000000001001111.

4.25.32. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'1111100011111111
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'1111100011111111'.

4.25.33. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1573 using $paramod\$lut\WIDTH=4\LUT=16'1111100011111111.

4.25.34. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0000000000000001
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0000000000000001'.

4.25.35. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1585 using $paramod\$lut\WIDTH=4\LUT=16'0000000000000001.

4.25.36. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'1000111110001000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'1000111110001000'.

4.25.37. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1579 using $paramod\$lut\WIDTH=4\LUT=16'1000111110001000.

4.25.38. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'11000101
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'11000101'.

4.25.39. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1589 using $paramod\$lut\WIDTH=3\LUT=8'11000101.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1583 using $paramod\$lut\WIDTH=2\LUT=4'1110.

4.25.40. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'11101111
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'11101111'.

4.25.41. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1584 using $paramod\$lut\WIDTH=3\LUT=8'11101111.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1582 using $paramod\$lut\WIDTH=4\LUT=16'1000111110001000.

4.25.42. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0001111100000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0001111100000000'.

4.25.43. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1594 using $paramod\$lut\WIDTH=4\LUT=16'0001111100000000.

4.25.44. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0000111111101110
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0000111111101110'.

4.25.45. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1593 using $paramod\$lut\WIDTH=4\LUT=16'0000111111101110.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1587 using $paramod\$lut\WIDTH=3\LUT=8'11000101.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1588 using $paramod\$lut\WIDTH=3\LUT=8'11000101.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1586 using $paramod\$lut\WIDTH=3\LUT=8'11000101.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1601 using $paramod\$lut\WIDTH=4\LUT=16'0001000000000000.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1599 using $paramod\$lut\WIDTH=4\LUT=16'0000000000000001.

4.25.46. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'1000000000000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'1000000000000000'.

4.25.47. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1600 using $paramod\$lut\WIDTH=4\LUT=16'1000000000000000.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1598 using $paramod\$lut\WIDTH=4\LUT=16'0000000000000001.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1597 using $paramod\$lut\WIDTH=4\LUT=16'1000000000000000.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1591 using $paramod\$lut\WIDTH=3\LUT=8'11000101.

4.25.48. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'11110100
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'11110100'.

4.25.49. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1592 using $paramod\$lut\WIDTH=3\LUT=8'11110100.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1590 using $paramod\$lut\WIDTH=3\LUT=8'11000101.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1595 using $paramod\$lut\WIDTH=3\LUT=8'11000101.

4.25.50. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 2
Parameter \LUT = 4'0100
Generating RTLIL representation for module `$paramod\$lut\WIDTH=2\LUT=4'0100'.

4.25.51. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1596 using $paramod\$lut\WIDTH=2\LUT=4'0100.

4.25.52. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 1
Parameter \LUT = 2'01
Generating RTLIL representation for module `$paramod\$lut\WIDTH=1\LUT=2'01'.

4.25.53. Continuing TECHMAP pass.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1603 using $paramod\$lut\WIDTH=1\LUT=2'01.
Mapping tx_rx.$abc$1560$auto$blifparse.cc:465:parse_blif$1602 using $paramod\$lut\WIDTH=1\LUT=2'01.
No more expansions possible.
Removed 0 unused cells and 86 unused wires.

4.26. Executing HIERARCHY pass (managing design hierarchy).

4.26.1. Analyzing design hierarchy..
Top module:  \tx_rx

4.26.2. Analyzing design hierarchy..
Top module:  \tx_rx
Removed 0 unused modules.

4.27. Printing statistics.

=== tx_rx ===

   Number of wires:                 81
   Number of wire bits:            211
   Number of public wires:          40
   Number of public wire bits:     131
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                138
     SB_CARRY                       15
     SB_DFF                         20
     SB_DFFE                         8
     SB_DFFESR                      20
     SB_DFFESS                       2
     SB_DFFSR                        2
     SB_DFFSS                        2
     SB_IO                           8
     SB_LUT4                        60
     SB_PLL40_CORE                   1

4.28. Executing CHECK pass (checking for obvious problems).
checking module tx_rx..
found and reported 0 problems.

4.29. Executing BLIF backend.

End of script. Logfile hash: 4b04c90c71
CPU: user 0.43s system 0.01s, MEM: 38.66 MB total, 8.33 MB resident
Yosys 0.7+259 (git sha1 5c09f24, clang 3.4.2 -fPIC -Os)
Time spent: 24% 12x read_verilog (0 sec), 16% 18x opt_expr (0 sec), ...
arachne-pnr -d 8k -P ct256 -p top_level.pcf tx_rx.blif -o tx_rx.asc
icepack tx_rx.asc tx_rx.bin
